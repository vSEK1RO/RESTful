version: "3.9"
networks:
  monitoring:
services:
  postgres:
    hostname: postgres
    image: postgres:16.2
    environment:
      POSTGRES_DB: restful
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      GDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - monitoring
    restart: unless-stopped
  app:
    build: .
    depends_on:
      - postgres
    networks:
      - monitoring
    ports:
      - "8080:8080"
  grafana:
    build: ./config/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
#      - GF_SECURITY_ADMIN_USER=root
#      - GF_SECURITY_ADMIN_PASSWORD=root
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus
    command: "--config.file=/etc/config/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/config/prometheus.yml
    networks:
      - monitoring
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://root:root@host.docker.internal:5432/restful?sslmode=disable"
    links:
      - postgres
      - prometheus
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - monitoring
  loki:
    image: grafana/loki
    command: ["-config.file=/etc/config/loki.yml"]
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./config/loki.yml:/etc/config/loki.yml
    networks:
      - monitoring
    ports:
      - "3100:3100"
  promtail:
    image: grafana/promtail
    command: "-config.file=/etc/config/promtail.yml -config.expand-env=true"
    volumes:
      - ./config/promtail.yml:/etc/config/promtail.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitoring
  tempo:
    image: grafana/tempo
    command: "-config.file=/etc/config/tempo.yml"
    volumes:
      - ./config/tempo.yml:/etc/config/tempo.yml
    ports:
      - "9411:9411"
volumes:
  postgres: